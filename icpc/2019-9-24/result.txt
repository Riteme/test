Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  ms/call  ms/call  name    
 69.72      6.51     6.51 102769856     0.00     0.00  HashSet::insert(unsigned long long)
 12.42      7.67     1.16      100    11.60    11.60  HashSet::clear()
  5.57      8.19     0.52 710358498     0.00     0.00  std::remove_reference<unsigned char&>::type&& std::move<unsigned char&>(unsigned char&)
  5.41      8.70     0.51   240200     0.00     0.03  dfs(int)
  4.02      9.07     0.38 236786166     0.00     0.00  _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
  1.50      9.21     0.14      100     1.40     1.48  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*)
  0.27      9.24     0.03                             frame_dummy
  0.16      9.25     0.02                             main
  0.11      9.26     0.01  2182000     0.00     0.00  unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&)
  0.11      9.27     0.01   820300     0.00     0.00  __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr()
  0.11      9.28     0.01   740800     0.00     0.00  __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() const
  0.11      9.29     0.01   740800     0.00     0.00  std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() const
  0.11      9.30     0.01   480400     0.00     0.00  std::allocator<unsigned long long>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&)
  0.11      9.31     0.01   245100     0.00     0.00  H(int, unsigned char const*)
  0.11      9.32     0.01   245100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_begin(unsigned long) const
  0.11      9.33     0.01   245100     0.00     0.00  std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::count(unsigned long long const&) const
  0.11      9.34     0.01   240200     0.00     0.00  std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >&)
  0.00      9.34     0.00  1227100     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
  0.00      9.34     0.00  1227100     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.00      9.34     0.00  1227100     0.00     0.00  std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
  0.00      9.34     0.00  1226100     0.00     0.00  std::hash<unsigned long long>::operator()(unsigned long long) const
  0.00      9.34     0.00  1226100     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
  0.00      9.34     0.00  1226100     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true> const&)
  0.00      9.34     0.00  1079700     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
  0.00      9.34     0.00  1079700     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&)
  0.00      9.34     0.00  1076600     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>::_M_next() const
  0.00      9.34     0.00   981000     0.00     0.00  unsigned long long const& std::__detail::_Identity::operator()<unsigned long long const&>(unsigned long long const&) const
  0.00      9.34     0.00   962800     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator()
  0.00      9.34     0.00   962800     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&)
  0.00      9.34     0.00   820300     0.00     0.00  __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr()
  0.00      9.34     0.00   820300     0.00     0.00  std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr()
  0.00      9.34     0.00   740800     0.00     0.00  __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() const
  0.00      9.34     0.00   740800     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const
  0.00      9.34     0.00   740800     0.00     0.00  std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const
  0.00      9.34     0.00   486300     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const
  0.00      9.34     0.00   486300     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const
  0.00      9.34     0.00   485300     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const
  0.00      9.34     0.00   480400     0.00     0.00  __gnu_cxx::new_allocator<unsigned long long>::new_allocator()
  0.00      9.34     0.00   480400     0.00     0.00  __gnu_cxx::new_allocator<unsigned long long>::~new_allocator()
  0.00      9.34     0.00   480400     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>* std::__addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&)
  0.00      9.34     0.00   480400     0.00     0.00  std::__detail::_Node_iterator<unsigned long long, true, false>&& std::forward<std::__detail::_Node_iterator<unsigned long long, true, false> >(std::remove_reference<std::__detail::_Node_iterator<unsigned long long, true, false> >::type&)
  0.00      9.34     0.00   480400     0.00     0.00  bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  0.00      9.34     0.00   456800     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const
  0.00      9.34     0.00   339900     0.00     0.00  unsigned long long& std::__detail::_Identity::operator()<unsigned long long&>(unsigned long long&) const
  0.00      9.34     0.00   339900     0.00     0.00  std::__detail::_Hash_node_value_base<unsigned long long>::_M_v()
  0.00      9.34     0.00   339900     0.00     0.00  unsigned long long& std::forward<unsigned long long&>(std::remove_reference<unsigned long long&>::type&)
  0.00      9.34     0.00   338900     0.00     0.00  std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const
  0.00      9.34     0.00   338900     0.00     0.00  std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const
  0.00      9.34     0.00   338900     0.00     0.00  std::equal_to<unsigned long long>::operator()(unsigned long long const&, unsigned long long const&) const
  0.00      9.34     0.00   338900     0.00     0.00  std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   338900     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true> const&)
  0.00      9.34     0.00   245100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const
  0.00      9.34     0.00   241200     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
  0.00      9.34     0.00   241200     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&)
  0.00      9.34     0.00   240300     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      9.34     0.00   240200     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::deallocate(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long)
  0.00      9.34     0.00   240200     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocate(unsigned long, void const*)
  0.00      9.34     0.00   240200     0.00     0.00  void __gnu_cxx::new_allocator<unsigned long long>::destroy<unsigned long long>(unsigned long long*)
  0.00      9.34     0.00   240200     0.00     0.00  void __gnu_cxx::new_allocator<unsigned long long>::construct<unsigned long long, unsigned long long const&>(unsigned long long*, unsigned long long const&)
  0.00      9.34     0.00   240200     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::max_size() const
  0.00      9.34     0.00   240200     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned long long const&, unsigned long) const
  0.00      9.34     0.00   240200     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::operator()<unsigned long long const&>(unsigned long long const&) const
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) const
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      9.34     0.00   240200     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   240200     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   240200     0.00     0.00  std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>)
  0.00      9.34     0.00   240200     0.00     0.00  std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::insert(unsigned long long const&)
  0.00      9.34     0.00   240200     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node<unsigned long long, false>*>::pointer_to(std::__detail::_Hash_node<unsigned long long, false>&)
  0.00      9.34     0.00   240200     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, std::__detail::_Hash_node<unsigned long long, false>*, unsigned long)
  0.00      9.34     0.00   240200     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, unsigned long)
  0.00      9.34     0.00   240200     0.00     0.00  void std::allocator_traits<std::allocator<unsigned long long> >::destroy<unsigned long long>(std::allocator<unsigned long long>&, unsigned long long*)
  0.00      9.34     0.00   240200     0.00     0.00  void std::allocator_traits<std::allocator<unsigned long long> >::construct<unsigned long long, unsigned long long const&>(std::allocator<unsigned long long>&, unsigned long long*, unsigned long long const&)
  0.00      9.34     0.00   240200     0.00     0.00  std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>::_Hash_node()
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable()
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Node_iterator<unsigned long long, true, false>::_Node_iterator(std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Node_iterator_base<unsigned long long, false>::_Node_iterator_base(std::__detail::_Hash_node<unsigned long long, false>*)
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_node_value_base<unsigned long long>::_Hash_node_value_base()
  0.00      9.34     0.00   240200     0.00     0.00  std::__detail::_Hash_node<unsigned long long, false>* std::addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&)
  0.00      9.34     0.00   240200     0.00     0.00  std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&)
  0.00      9.34     0.00    10100     0.00     0.00  reset(int)
  0.00      9.34     0.00     3000     0.00     0.00  std::remove_reference<int&>::type&& std::move<int&>(int&)
  0.00      9.34     0.00     2000     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      9.34     0.00     2000     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator()
  0.00      9.34     0.00     2000     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&)
  0.00      9.34     0.00     2000     0.00     0.00  std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      9.34     0.00     1100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const
  0.00      9.34     0.00     1100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const
  0.00      9.34     0.00     1100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      9.34     0.00     1100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets()
  0.00      9.34     0.00     1000     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
  0.00      9.34     0.00     1000     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
  0.00      9.34     0.00     1000     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const
  0.00      9.34     0.00     1000     0.00     0.01  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00      9.34     0.00     1000     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long)
  0.00      9.34     0.00     1000     0.00     0.01  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      9.34     0.00     1000     0.00     0.00  std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&)
  0.00      9.34     0.00     1000     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long)
  0.00      9.34     0.00     1000     0.00     0.00  std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long)
  0.00      9.34     0.00     1000     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long)
  0.00      9.34     0.00     1000     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      9.34     0.00     1000     0.00     0.00  _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
  0.00      9.34     0.00     1000     0.00     0.00  std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  0.00      9.34     0.00     1000     0.00     0.00  void std::iter_swap<int*, int*>(int*, int*)
  0.00      9.34     0.00      312     0.00     0.00  std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long)
  0.00      9.34     0.00      312     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long)
  0.00      9.34     0.00      311     0.00     0.00  std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      9.34     0.00      311     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long)
  0.00      9.34     0.00      200     0.00     0.00  std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&)
  0.00      9.34     0.00      200     0.00     0.00  void std::reverse<int*>(int*, int*)
  0.00      9.34     0.00      200     0.00     0.00  void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag)
  0.00      9.34     0.00      100     0.00    93.03  solve()
  0.00      9.34     0.00      100     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::new_allocator()
  0.00      9.34     0.00      100     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::~new_allocator()
  0.00      9.34     0.00      100     0.00     0.00  HashSet::size() const
  0.00      9.34     0.00      100     0.00     0.00  std::allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocator()
  0.00      9.34     0.00      100     0.00     1.48  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()
  0.00      9.34     0.00      100     0.00     0.00  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable()
  0.00      9.34     0.00      100     0.00     1.48  std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
  0.00      9.34     0.00      100     0.00     0.00  std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::unordered_set()
  0.00      9.34     0.00      100     0.00     0.00  std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::~unordered_set()
  0.00      9.34     0.00      100     0.00     0.00  std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_Hashtable_alloc()
  0.00      9.34     0.00      100     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      9.34     0.00      100     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_Hashtable_ebo_helper()
  0.00      9.34     0.00       50     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()()
  0.00      9.34     0.00        1     0.00     0.00  std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      9.34     0.00        1     0.00     0.00  std::random_device::~random_device()
  0.00      9.34     0.00        1     0.00     0.00  std::random_device::operator()()
  0.00      9.34     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand()
  0.00      9.34     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long)
  0.00      9.34     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) for 0.11% of 9.34 seconds

index % time    self  children    called     name
                                                 <spontaneous>
[1]     99.7    0.02    9.30                 main [1]
                0.00    9.30     100/100         solve() [2]
                0.00    0.00     200/200         void std::reverse<int*>(int*, int*) [123]
                0.00    0.00      50/50          std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [135]
                0.00    0.00       1/1           std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [136]
                0.00    0.00       1/1           std::random_device::operator()() [138]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [141]
                0.00    0.00       1/1           std::random_device::~random_device() [137]
-----------------------------------------------
                              245100             solve() [2]
                0.00    9.30     100/100         main [1]
[2]     99.6    0.00    9.30     100+245100  solve() [2]
                0.51    7.41  240200/240200      dfs(int) [3]
                1.16    0.00     100/100         HashSet::clear() [5]
                0.00    0.15     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
                0.00    0.04  240200/240200      std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [11]
                0.00    0.02  245100/245100      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
                0.01    0.00  245100/245100      H(int, unsigned char const*) [24]
                0.01    0.00  245100/245100      std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::count(unsigned long long const&) const [26]
                0.00    0.00  481508/236786166     _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [6]
                0.00    0.00  240200/240200      std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::insert(unsigned long long const&) [83]
                0.00    0.00   10100/10100       reset(int) [96]
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
                0.00    0.00     100/100         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::unordered_set() [130]
                0.00    0.00     100/100         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::~new_allocator() [126]
                0.00    0.00     100/100         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::~unordered_set() [131]
                0.00    0.00     100/100         HashSet::size() const [127]
                              245100             solve() [2]
-----------------------------------------------
                             236541166             dfs(int) [3]
                0.51    7.41  240200/240200      solve() [2]
[3]     84.7    0.51    7.41  240200+236541166 dfs(int) [3]
                6.51    0.00 102769856/102769856     HashSet::insert(unsigned long long) [4]
                0.37    0.52 236304658/236786166     _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [6]
                             236541166             dfs(int) [3]
-----------------------------------------------
                6.51    0.00 102769856/102769856     dfs(int) [3]
[4]     69.7    6.51    0.00 102769856         HashSet::insert(unsigned long long) [4]
-----------------------------------------------
                1.16    0.00     100/100         solve() [2]
[5]     12.4    1.16    0.00     100         HashSet::clear() [5]
-----------------------------------------------
                0.00    0.00  481508/236786166     solve() [2]
                0.37    0.52 236304658/236786166     dfs(int) [3]
[6]      9.6    0.38    0.52 236786166         _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [6]
                0.52    0.00 710358498/710358498     std::remove_reference<unsigned char&>::type&& std::move<unsigned char&>(unsigned char&) [7]
-----------------------------------------------
                0.52    0.00 710358498/710358498     _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [6]
[7]      5.6    0.52    0.00 710358498         std::remove_reference<unsigned char&>::type&& std::move<unsigned char&>(unsigned char&) [7]
-----------------------------------------------
                0.00    0.15     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
[8]      1.6    0.00    0.15     100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [8]
                0.14    0.01     100/100         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*) [10]
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [103]
-----------------------------------------------
                0.00    0.15     100/100         solve() [2]
[9]      1.6    0.00    0.15     100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
                0.00    0.15     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [8]
                0.00    0.00     100/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [104]
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [105]
-----------------------------------------------
                0.14    0.01     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [8]
[10]     1.6    0.14    0.01     100         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*) [10]
                0.00    0.01  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
                0.00    0.00  240200/1076600     std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
-----------------------------------------------
                0.00    0.04  240200/240200      solve() [2]
[11]     0.5    0.00    0.04  240200         std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [11]
                0.00    0.03  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.01    0.00  240200/240200      std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >&) [27]
                0.00    0.00  240200/240200      std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [90]
-----------------------------------------------
                0.00    0.03  240200/240200      std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [11]
[12]     0.4    0.00    0.03  240200         std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.01  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.01  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.01  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned long long const&, unsigned long) const [31]
                0.00    0.00  480400/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::operator()<unsigned long long const&>(unsigned long long const&) const [37]
                0.00    0.00  240200/241200      std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&) [75]
                0.00    0.00  240200/241200      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [74]
                0.00    0.00  240200/981000      unsigned long long const& std::__detail::_Identity::operator()<unsigned long long const&>(unsigned long long const&) const [53]
                0.00    0.00  240200/1226100     std::hash<unsigned long long>::operator()(unsigned long long) const [47]
                0.00    0.00  240200/485300      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [61]
                0.00    0.00  240200/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00  240200/486300      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00  240200/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const [59]
                0.00    0.00  240200/240200      std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [95]
-----------------------------------------------
                                                 <spontaneous>
[13]     0.3    0.03    0.00                 frame_dummy [13]
-----------------------------------------------
                0.00    0.00  121000/740800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.01  165000/740800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.01  170800/740800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
                0.00    0.01  284000/740800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[14]     0.3    0.00    0.02  740800         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
                0.00    0.02  740800/740800      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [15]
                0.00    0.00  740800/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
                0.00    0.00  740800/1226100     std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true> const&) [49]
                0.00    0.00  740800/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [48]
                0.00    0.00  740800/1227100     std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [46]
                0.00    0.00  740800/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [44]
                0.00    0.00  740800/1079700     std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&) [51]
                0.00    0.00  740800/1079700     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [50]
                0.00    0.00  740800/1226100     std::hash<unsigned long long>::operator()(unsigned long long) const [47]
                0.00    0.00  740800/981000      unsigned long long const& std::__detail::_Identity::operator()<unsigned long long const&>(unsigned long long const&) const [53]
-----------------------------------------------
                0.00    0.02  740800/740800      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[15]     0.2    0.00    0.02  740800         std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [15]
                0.01    0.00  740800/740800      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() const [21]
                0.01    0.00  740800/740800      std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() const [22]
                0.00    0.00  740800/740800      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() const [58]
-----------------------------------------------
                0.00    0.02  245100/245100      solve() [2]
[16]     0.2    0.00    0.02  245100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
                0.01    0.00  245100/245100      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_begin(unsigned long) const [25]
                0.00    0.01  170800/740800      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
                0.00    0.00  173500/338900      std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
                0.00    0.00  415900/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00  245100/1226100     std::hash<unsigned long long>::operator()(unsigned long long) const [47]
                0.00    0.00  245100/485300      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [61]
                0.00    0.00  245100/486300      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00  245100/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const [59]
                0.00    0.00  220200/1076600     std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
                0.00    0.00  173500/338900      std::equal_to<unsigned long long>::operator()(unsigned long long const&, unsigned long long const&) const [72]
                0.00    0.00  173500/338900      std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
                0.00    0.00  170800/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const [67]
-----------------------------------------------
                0.00    0.01  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[17]     0.1    0.00    0.01  240200         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.01    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [29]
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.00    1000/339900      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
                0.00    0.00  240200/240200      std::__detail::_Prime_rehash_policy::_M_state() const [82]
                0.00    0.00  240200/240200      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) const [81]
                0.00    0.00  240200/240200      std::__detail::_Node_iterator_base<unsigned long long, false>::_Node_iterator_base(std::__detail::_Hash_node<unsigned long long, false>*) [92]
                0.00    0.00  240200/240200      std::__detail::_Node_iterator<unsigned long long, true, false>::_Node_iterator(std::__detail::_Hash_node<unsigned long long, false>*) [91]
                0.00    0.00    1000/241200      std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&) [75]
                0.00    0.00    1000/241200      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [74]
                0.00    0.00    1000/339900      unsigned long long& std::forward<unsigned long long&>(std::remove_reference<unsigned long long&>::type&) [69]
                0.00    0.00    1000/339900      unsigned long long& std::__detail::_Identity::operator()<unsigned long long&>(unsigned long long&) const [68]
                0.00    0.00    1000/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00    1000/486300      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00    1000/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const [59]
-----------------------------------------------
                0.00    0.01  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[18]     0.1    0.00    0.01  240200         std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.01    0.00  240200/480400      std::allocator<unsigned long long>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [23]
                0.00    0.00  240200/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() [20]
                0.00    0.00  240200/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
                0.00    0.00  240200/240200      void __gnu_cxx::new_allocator<unsigned long long>::construct<unsigned long long, unsigned long long const&>(unsigned long long*, unsigned long long const&) [36]
                0.00    0.00  240200/240200      void std::allocator_traits<std::allocator<unsigned long long> >::construct<unsigned long long, unsigned long long const&>(std::allocator<unsigned long long>&, unsigned long long*, unsigned long long const&) [38]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&) [55]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator() [54]
                0.00    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&) [64]
                0.00    0.00  240200/240200      __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocate(unsigned long, void const*) [78]
                0.00    0.00  240200/240200      std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, unsigned long) [86]
                0.00    0.00  240200/240300      std::__detail::_Hash_node_base::_Hash_node_base() [76]
                0.00    0.00  240200/240200      std::__detail::_Hash_node_value_base<unsigned long long>::_Hash_node_value_base() [93]
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>::_Hash_node() [89]
                0.00    0.00  240200/480400      __gnu_cxx::new_allocator<unsigned long long>::new_allocator() [62]
                0.00    0.00  240200/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() [56]
                0.00    0.00  240200/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() [57]
                0.00    0.00  240200/480400      __gnu_cxx::new_allocator<unsigned long long>::~new_allocator() [63]
-----------------------------------------------
                0.00    0.00  240200/2182000     std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::operator()<unsigned long long const&>(unsigned long long const&) const [37]
                0.00    0.00  240200/2182000     std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/2182000     void std::allocator_traits<std::allocator<unsigned long long> >::construct<unsigned long long, unsigned long long const&>(std::allocator<unsigned long long>&, unsigned long long*, unsigned long long const&) [38]
                0.00    0.00  240200/2182000     void __gnu_cxx::new_allocator<unsigned long long>::construct<unsigned long long, unsigned long long const&>(unsigned long long*, unsigned long long const&) [36]
                0.00    0.00  480400/2182000     std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  740800/2182000     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[19]     0.1    0.01    0.00 2182000         unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
-----------------------------------------------
                0.00    0.00  240200/820300      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/820300      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
                0.00    0.00  339900/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
[20]     0.1    0.01    0.00  820300         __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() [20]
-----------------------------------------------
                0.01    0.00  740800/740800      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [15]
[21]     0.1    0.01    0.00  740800         __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() const [21]
-----------------------------------------------
                0.01    0.00  740800/740800      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [15]
[22]     0.1    0.01    0.00  740800         std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() const [22]
-----------------------------------------------
                0.01    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.01    0.00  240200/480400      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[23]     0.1    0.01    0.00  480400         std::allocator<unsigned long long>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [23]
-----------------------------------------------
                0.01    0.00  245100/245100      solve() [2]
[24]     0.1    0.01    0.00  245100         H(int, unsigned char const*) [24]
-----------------------------------------------
                0.01    0.00  245100/245100      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[25]     0.1    0.01    0.00  245100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_begin(unsigned long) const [25]
-----------------------------------------------
                0.01    0.00  245100/245100      solve() [2]
[26]     0.1    0.01    0.00  245100         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::count(unsigned long long const&) const [26]
-----------------------------------------------
                0.01    0.00  240200/240200      std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [11]
[27]     0.1    0.01    0.00  240200         std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >&) [27]
-----------------------------------------------
                0.00    0.01    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [29]
[28]     0.1    0.00    0.01    1000         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
                0.00    0.01  284000/740800      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
                0.00    0.00  284000/1076600     std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
                0.00    0.00  284000/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [109]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [103]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [104]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [105]
                0.00    0.00     900/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
-----------------------------------------------
                0.00    0.01    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[29]     0.1    0.00    0.01    1000         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [29]
                0.00    0.01    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
-----------------------------------------------
                0.00    0.01  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*) [10]
[30]     0.1    0.00    0.01  240200         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
                0.01    0.00  240200/480400      std::allocator<unsigned long long>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [23]
                0.00    0.00  240200/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() [20]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&) [55]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator() [54]
                0.00    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&) [64]
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&) [94]
                0.00    0.00  240200/240200      std::pointer_traits<std::__detail::_Hash_node<unsigned long long, false>*>::pointer_to(std::__detail::_Hash_node<unsigned long long, false>&) [84]
                0.00    0.00  240200/480400      __gnu_cxx::new_allocator<unsigned long long>::new_allocator() [62]
                0.00    0.00  240200/240200      void __gnu_cxx::new_allocator<unsigned long long>::destroy<unsigned long long>(unsigned long long*) [79]
                0.00    0.00  240200/240200      void std::allocator_traits<std::allocator<unsigned long long> >::destroy<unsigned long long>(std::allocator<unsigned long long>&, unsigned long long*) [87]
                0.00    0.00  240200/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() [56]
                0.00    0.00  240200/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() [57]
                0.00    0.00  240200/240200      __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::deallocate(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [77]
                0.00    0.00  240200/240200      std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [85]
                0.00    0.00  240200/480400      __gnu_cxx::new_allocator<unsigned long long>::~new_allocator() [63]
-----------------------------------------------
                0.00    0.01  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[31]     0.1    0.00    0.01  240200         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned long long const&, unsigned long) const [31]
                0.00    0.01  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
-----------------------------------------------
                0.00    0.01  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned long long const&, unsigned long) const [31]
[32]     0.1    0.00    0.01  240200         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.01  165000/740800      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
                0.00    0.00  165400/338900      std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
                0.00    0.00  211200/1076600     std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
                0.00    0.00  165400/338900      std::equal_to<unsigned long long>::operator()(unsigned long long const&, unsigned long long const&) const [72]
                0.00    0.00  165400/338900      std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
                0.00    0.00  165000/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00  165000/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const [67]
-----------------------------------------------
                0.00    0.00    1000/339900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  338900/339900      std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
[33]     0.0    0.00    0.00  339900         std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
                0.00    0.00  339900/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() [20]
                0.00    0.00  339900/820300      __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() [56]
                0.00    0.00  339900/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() [57]
-----------------------------------------------
                0.00    0.00  165400/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  173500/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[34]     0.0    0.00    0.00  338900         std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
                0.00    0.00  338900/339900      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
                0.00    0.00  338900/339900      unsigned long long& std::forward<unsigned long long&>(std::remove_reference<unsigned long long&>::type&) [69]
                0.00    0.00  338900/339900      unsigned long long& std::__detail::_Identity::operator()<unsigned long long&>(unsigned long long&) const [68]
-----------------------------------------------
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[35]     0.0    0.00    0.00  240200         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.00  121000/740800      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
                0.00    0.00  121000/1076600     std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
                0.00    0.00  121000/1227100     std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
                0.00    0.00  121000/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const [67]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[36]     0.0    0.00    0.00  240200         void __gnu_cxx::new_allocator<unsigned long long>::construct<unsigned long long, unsigned long long const&>(unsigned long long*, unsigned long long const&) [36]
                0.00    0.00  240200/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
-----------------------------------------------
                0.00    0.00  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[37]     0.0    0.00    0.00  240200         std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::operator()<unsigned long long const&>(unsigned long long const&) const [37]
                0.00    0.00  240200/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[38]     0.0    0.00    0.00  240200         void std::allocator_traits<std::allocator<unsigned long long> >::construct<unsigned long long, unsigned long long const&>(std::allocator<unsigned long long>&, unsigned long long*, unsigned long long const&) [38]
                0.00    0.00  240200/2182000     unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&) [19]
-----------------------------------------------
                0.00    0.00  486300/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00  740800/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[44]     0.0    0.00    0.00 1227100         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [44]
-----------------------------------------------
                0.00    0.00    1000/1227100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  121000/1227100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.00  165000/1227100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  240200/1227100     std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  284000/1227100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
                0.00    0.00  415900/1227100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[45]     0.0    0.00    0.00 1227100         std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [45]
-----------------------------------------------
                0.00    0.00  486300/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00  740800/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[46]     0.0    0.00    0.00 1227100         std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [46]
-----------------------------------------------
                0.00    0.00  240200/1226100     std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  245100/1226100     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
                0.00    0.00  740800/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[47]     0.0    0.00    0.00 1226100         std::hash<unsigned long long>::operator()(unsigned long long) const [47]
-----------------------------------------------
                0.00    0.00  485300/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [61]
                0.00    0.00  740800/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[48]     0.0    0.00    0.00 1226100         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [48]
-----------------------------------------------
                0.00    0.00  485300/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [61]
                0.00    0.00  740800/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[49]     0.0    0.00    0.00 1226100         std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true> const&) [49]
-----------------------------------------------
                0.00    0.00  338900/1079700     std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
                0.00    0.00  740800/1079700     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[50]     0.0    0.00    0.00 1079700         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [50]
-----------------------------------------------
                0.00    0.00  338900/1079700     std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
                0.00    0.00  740800/1079700     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[51]     0.0    0.00    0.00 1079700         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&) [51]
-----------------------------------------------
                0.00    0.00  121000/1076600     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.00  211200/1076600     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  220200/1076600     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
                0.00    0.00  240200/1076600     std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*) [10]
                0.00    0.00  284000/1076600     std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[52]     0.0    0.00    0.00 1076600         std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [52]
-----------------------------------------------
                0.00    0.00  240200/981000      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  740800/981000      std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [14]
[53]     0.0    0.00    0.00  981000         unsigned long long const& std::__detail::_Identity::operator()<unsigned long long const&>(unsigned long long const&) const [53]
-----------------------------------------------
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
                0.00    0.00  480400/962800      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[54]     0.0    0.00    0.00  962800         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator() [54]
-----------------------------------------------
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
                0.00    0.00  480400/962800      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  480400/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[55]     0.0    0.00    0.00  962800         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&) [55]
-----------------------------------------------
                0.00    0.00  240200/820300      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/820300      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
                0.00    0.00  339900/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
[56]     0.0    0.00    0.00  820300         __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() [56]
-----------------------------------------------
                0.00    0.00  240200/820300      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/820300      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
                0.00    0.00  339900/820300      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() [33]
[57]     0.0    0.00    0.00  820300         std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() [57]
-----------------------------------------------
                0.00    0.00  740800/740800      std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [15]
[58]     0.0    0.00    0.00  740800         __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() const [58]
-----------------------------------------------
                0.00    0.00    1000/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  240200/486300      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  245100/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[59]     0.0    0.00    0.00  486300         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const [59]
-----------------------------------------------
                0.00    0.00    1000/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  240200/486300      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  245100/486300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[60]     0.0    0.00    0.00  486300         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [60]
                0.00    0.00  486300/1227100     std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [46]
                0.00    0.00  486300/1227100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [44]
-----------------------------------------------
                0.00    0.00  240200/485300      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
                0.00    0.00  245100/485300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[61]     0.0    0.00    0.00  485300         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [61]
                0.00    0.00  485300/1226100     std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true> const&) [49]
                0.00    0.00  485300/1226100     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [48]
-----------------------------------------------
                0.00    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/480400      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[62]     0.0    0.00    0.00  480400         __gnu_cxx::new_allocator<unsigned long long>::new_allocator() [62]
-----------------------------------------------
                0.00    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/480400      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[63]     0.0    0.00    0.00  480400         __gnu_cxx::new_allocator<unsigned long long>::~new_allocator() [63]
-----------------------------------------------
                0.00    0.00  240200/480400      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
                0.00    0.00  240200/480400      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[64]     0.0    0.00    0.00  480400         std::__detail::_Hash_node<unsigned long long, false>* std::__addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&) [64]
-----------------------------------------------
                0.00    0.00  240200/480400      std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [95]
                0.00    0.00  240200/480400      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [88]
[65]     0.0    0.00    0.00  480400         std::__detail::_Node_iterator<unsigned long long, true, false>&& std::forward<std::__detail::_Node_iterator<unsigned long long, true, false> >(std::remove_reference<std::__detail::_Node_iterator<unsigned long long, true, false> >::type&) [65]
-----------------------------------------------
                0.00    0.00  240200/480400      std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [95]
                0.00    0.00  240200/480400      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [88]
[66]     0.0    0.00    0.00  480400         bool&& std::forward<bool>(std::remove_reference<bool>::type&) [66]
-----------------------------------------------
                0.00    0.00  121000/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [35]
                0.00    0.00  165000/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  170800/456800      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[67]     0.0    0.00    0.00  456800         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const [67]
-----------------------------------------------
                0.00    0.00    1000/339900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  338900/339900      std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
[68]     0.0    0.00    0.00  339900         unsigned long long& std::__detail::_Identity::operator()<unsigned long long&>(unsigned long long&) const [68]
-----------------------------------------------
                0.00    0.00    1000/339900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  338900/339900      std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [34]
[69]     0.0    0.00    0.00  339900         unsigned long long& std::forward<unsigned long long&>(std::remove_reference<unsigned long long&>::type&) [69]
-----------------------------------------------
                0.00    0.00  338900/338900      std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
[70]     0.0    0.00    0.00  338900         std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [70]
-----------------------------------------------
                0.00    0.00  165400/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  173500/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[71]     0.0    0.00    0.00  338900         std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
                0.00    0.00  338900/338900      std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true> const&) [73]
                0.00    0.00  338900/338900      std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [70]
                0.00    0.00  338900/1079700     std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&) [51]
                0.00    0.00  338900/1079700     std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [50]
-----------------------------------------------
                0.00    0.00  165400/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [32]
                0.00    0.00  173500/338900      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [16]
[72]     0.0    0.00    0.00  338900         std::equal_to<unsigned long long>::operator()(unsigned long long const&, unsigned long long const&) const [72]
-----------------------------------------------
                0.00    0.00  338900/338900      std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [71]
[73]     0.0    0.00    0.00  338900         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true> const&) [73]
-----------------------------------------------
                0.00    0.00    1000/241200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  240200/241200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[74]     0.0    0.00    0.00  241200         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [74]
-----------------------------------------------
                0.00    0.00    1000/241200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
                0.00    0.00  240200/241200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[75]     0.0    0.00    0.00  241200         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&) [75]
-----------------------------------------------
                0.00    0.00     100/240300      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
                0.00    0.00  240200/240300      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[76]     0.0    0.00    0.00  240300         std::__detail::_Hash_node_base::_Hash_node_base() [76]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[77]     0.0    0.00    0.00  240200         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::deallocate(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [77]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[78]     0.0    0.00    0.00  240200         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocate(unsigned long, void const*) [78]
                0.00    0.00  240200/240200      __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::max_size() const [80]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[79]     0.0    0.00    0.00  240200         void __gnu_cxx::new_allocator<unsigned long long>::destroy<unsigned long long>(unsigned long long*) [79]
-----------------------------------------------
                0.00    0.00  240200/240200      __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocate(unsigned long, void const*) [78]
[80]     0.0    0.00    0.00  240200         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::max_size() const [80]
-----------------------------------------------
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[81]     0.0    0.00    0.00  240200         std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) const [81]
-----------------------------------------------
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[82]     0.0    0.00    0.00  240200         std::__detail::_Prime_rehash_policy::_M_state() const [82]
-----------------------------------------------
                0.00    0.00  240200/240200      solve() [2]
[83]     0.0    0.00    0.00  240200         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::insert(unsigned long long const&) [83]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[84]     0.0    0.00    0.00  240200         std::pointer_traits<std::__detail::_Hash_node<unsigned long long, false>*>::pointer_to(std::__detail::_Hash_node<unsigned long long, false>&) [84]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[85]     0.0    0.00    0.00  240200         std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [85]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[86]     0.0    0.00    0.00  240200         std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, unsigned long) [86]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[87]     0.0    0.00    0.00  240200         void std::allocator_traits<std::allocator<unsigned long long> >::destroy<unsigned long long>(std::allocator<unsigned long long>&, unsigned long long*) [87]
-----------------------------------------------
                0.00    0.00  240200/240200      std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [95]
[88]     0.0    0.00    0.00  240200         std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [88]
                0.00    0.00  240200/480400      bool&& std::forward<bool>(std::remove_reference<bool>::type&) [66]
                0.00    0.00  240200/480400      std::__detail::_Node_iterator<unsigned long long, true, false>&& std::forward<std::__detail::_Node_iterator<unsigned long long, true, false> >(std::remove_reference<std::__detail::_Node_iterator<unsigned long long, true, false> >::type&) [65]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[89]     0.0    0.00    0.00  240200         std::__detail::_Hash_node<unsigned long long, false>::_Hash_node() [89]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [11]
[90]     0.0    0.00    0.00  240200         std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [90]
-----------------------------------------------
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[91]     0.0    0.00    0.00  240200         std::__detail::_Node_iterator<unsigned long long, true, false>::_Node_iterator(std::__detail::_Hash_node<unsigned long long, false>*) [91]
-----------------------------------------------
                0.00    0.00  240200/240200      std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [17]
[92]     0.0    0.00    0.00  240200         std::__detail::_Node_iterator_base<unsigned long long, false>::_Node_iterator_base(std::__detail::_Hash_node<unsigned long long, false>*) [92]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&) [18]
[93]     0.0    0.00    0.00  240200         std::__detail::_Hash_node_value_base<unsigned long long>::_Hash_node_value_base() [93]
-----------------------------------------------
                0.00    0.00  240200/240200      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*) [30]
[94]     0.0    0.00    0.00  240200         std::__detail::_Hash_node<unsigned long long, false>* std::addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&) [94]
-----------------------------------------------
                0.00    0.00  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [12]
[95]     0.0    0.00    0.00  240200         std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [95]
                0.00    0.00  240200/480400      std::__detail::_Node_iterator<unsigned long long, true, false>&& std::forward<std::__detail::_Node_iterator<unsigned long long, true, false> >(std::remove_reference<std::__detail::_Node_iterator<unsigned long long, true, false> >::type&) [65]
                0.00    0.00  240200/480400      bool&& std::forward<bool>(std::remove_reference<bool>::type&) [66]
                0.00    0.00  240200/240200      std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [88]
-----------------------------------------------
                0.00    0.00   10100/10100       solve() [2]
[96]     0.0    0.00    0.00   10100         reset(int) [96]
-----------------------------------------------
                0.00    0.00    3000/3000        _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [115]
[97]     0.0    0.00    0.00    3000         std::remove_reference<int&>::type&& std::move<int&>(int&) [97]
-----------------------------------------------
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[98]     0.0    0.00    0.00    2000         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [98]
-----------------------------------------------
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[99]     0.0    0.00    0.00    2000         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [99]
-----------------------------------------------
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[100]    0.0    0.00    0.00    2000         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [100]
-----------------------------------------------
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/2000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[101]    0.0    0.00    0.00    2000         std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [101]
-----------------------------------------------
                0.00    0.00    1100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [104]
[102]    0.0    0.00    0.00    1100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [102]
-----------------------------------------------
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [8]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[103]    0.0    0.00    0.00    1100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [103]
-----------------------------------------------
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[104]    0.0    0.00    0.00    1100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [104]
                0.00    0.00    1100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [102]
-----------------------------------------------
                0.00    0.00     100/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
                0.00    0.00    1000/1100        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[105]    0.0    0.00    0.00    1100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [105]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[106]    0.0    0.00    0.00    1000         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [106]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
[107]    0.0    0.00    0.00    1000         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [107]
                0.00    0.00    1000/1000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [108]
-----------------------------------------------
                0.00    0.00    1000/1000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [107]
[108]    0.0    0.00    0.00    1000         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [108]
-----------------------------------------------
                0.00    0.00    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[109]    0.0    0.00    0.00    1000         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [109]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[110]    0.0    0.00    0.00    1000         std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [110]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[111]    0.0    0.00    0.00    1000         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [111]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
[112]    0.0    0.00    0.00    1000         std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [112]
-----------------------------------------------
                0.00    0.00    1000/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[113]    0.0    0.00    0.00    1000         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long) [113]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&) [55]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator() [54]
                0.00    0.00    1000/2000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [98]
                0.00    0.00    1000/2000        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [100]
                0.00    0.00    1000/1000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [107]
                0.00    0.00    1000/1000        std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [112]
                0.00    0.00    1000/2000        std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [101]
                0.00    0.00    1000/2000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [99]
-----------------------------------------------
                0.00    0.00     100/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [9]
                0.00    0.00     900/1000        std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [28]
[114]    0.0    0.00    0.00    1000         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&) [55]
                0.00    0.00    1000/962800      std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator() [54]
                0.00    0.00    1000/2000        std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [101]
                0.00    0.00    1000/1000        std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [116]
                0.00    0.00    1000/1000        std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [110]
                0.00    0.00    1000/2000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [98]
                0.00    0.00    1000/2000        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [100]
                0.00    0.00    1000/1000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [106]
                0.00    0.00    1000/1000        std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [111]
                0.00    0.00    1000/2000        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [99]
-----------------------------------------------
                0.00    0.00    1000/1000        void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag) [124]
[115]    0.0    0.00    0.00    1000         _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [115]
                0.00    0.00    3000/3000        std::remove_reference<int&>::type&& std::move<int&>(int&) [97]
-----------------------------------------------
                0.00    0.00    1000/1000        std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [114]
[116]    0.0    0.00    0.00    1000         std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&) [116]
-----------------------------------------------
                0.00    0.00    1000/1000        void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag) [124]
[117]    0.0    0.00    0.00    1000         void std::iter_swap<int*, int*>(int*, int*) [117]
-----------------------------------------------
                0.00    0.00     312/312         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
[118]    0.0    0.00    0.00     312         std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long) [118]
-----------------------------------------------
                0.00    0.00     312/312         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
[119]    0.0    0.00    0.00     312         unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long) [119]
-----------------------------------------------
                0.00    0.00     311/311         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
[120]    0.0    0.00    0.00     311         std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long) [120]
-----------------------------------------------
                0.00    0.00     311/311         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
[121]    0.0    0.00    0.00     311         unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long) [121]
-----------------------------------------------
                0.00    0.00     200/200         void std::reverse<int*>(int*, int*) [123]
[122]    0.0    0.00    0.00     200         std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&) [122]
-----------------------------------------------
                0.00    0.00     200/200         main [1]
[123]    0.0    0.00    0.00     200         void std::reverse<int*>(int*, int*) [123]
                0.00    0.00     200/200         void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag) [124]
                0.00    0.00     200/200         std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&) [122]
-----------------------------------------------
                0.00    0.00     200/200         void std::reverse<int*>(int*, int*) [123]
[124]    0.0    0.00    0.00     200         void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag) [124]
                0.00    0.00    1000/1000        _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_ [115]
                0.00    0.00    1000/1000        void std::iter_swap<int*, int*>(int*, int*) [117]
-----------------------------------------------
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
[125]    0.0    0.00    0.00     100         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::new_allocator() [125]
-----------------------------------------------
                0.00    0.00     100/100         solve() [2]
[126]    0.0    0.00    0.00     100         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::~new_allocator() [126]
-----------------------------------------------
                0.00    0.00     100/100         solve() [2]
[127]    0.0    0.00    0.00     100         HashSet::size() const [127]
-----------------------------------------------
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
[128]    0.0    0.00    0.00     100         std::allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocator() [128]
-----------------------------------------------
                0.00    0.00     100/100         solve() [2]
[129]    0.0    0.00    0.00     100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
                0.00    0.00     100/100         __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::new_allocator() [125]
                0.00    0.00     100/100         std::allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocator() [128]
                0.00    0.00     100/100         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_Hashtable_ebo_helper() [134]
                0.00    0.00     100/100         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_Hashtable_alloc() [132]
                0.00    0.00     100/240300      std::__detail::_Hash_node_base::_Hash_node_base() [76]
                0.00    0.00     100/100         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [133]
-----------------------------------------------
                0.00    0.00     100/100         solve() [2]
[130]    0.0    0.00    0.00     100         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::unordered_set() [130]
-----------------------------------------------
                0.00    0.00     100/100         solve() [2]
[131]    0.0    0.00    0.00     100         std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::~unordered_set() [131]
-----------------------------------------------
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
[132]    0.0    0.00    0.00     100         std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_Hashtable_alloc() [132]
-----------------------------------------------
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
[133]    0.0    0.00    0.00     100         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [133]
-----------------------------------------------
                0.00    0.00     100/100         std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [129]
[134]    0.0    0.00    0.00     100         std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_Hashtable_ebo_helper() [134]
-----------------------------------------------
                0.00    0.00      50/50          main [1]
[135]    0.0    0.00    0.00      50         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [135]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand() [139]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[136]    0.0    0.00    0.00       1         std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [136]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[137]    0.0    0.00    0.00       1         std::random_device::~random_device() [137]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[138]    0.0    0.00    0.00       1         std::random_device::operator()() [138]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [135]
[139]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand() [139]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[140]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [140]
                0.00    0.00     312/312         std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long) [118]
                0.00    0.00     312/312         unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long) [119]
                0.00    0.00     311/311         std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long) [120]
                0.00    0.00     311/311         unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long) [121]
-----------------------------------------------
                0.00    0.00       1/1           main [1]
[141]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [141]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [24] H(int, unsigned char const*) [45] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [74] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
   [3] dfs(int)               [82] std::__detail::_Prime_rehash_policy::_M_state() const [76] std::__detail::_Hash_node_base::_Hash_node_base()
  [96] reset(int)             [15] std::__detail::_Hash_node_value_base<unsigned long long>::_M_v() const [18] std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_node<unsigned long long const&>(unsigned long long const&)
   [2] solve()                [22] std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr() const [54] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_node_allocator()
   [5] HashSet::clear()       [53] unsigned long long const& std::__detail::_Identity::operator()<unsigned long long const&>(unsigned long long const&) const [30] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_node(std::__detail::_Hash_node<unsigned long long, false>*)
   [4] HashSet::insert(unsigned long long) [68] unsigned long long& std::__detail::_Identity::operator()<unsigned long long&>(unsigned long long&) const [113] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_allocate_buckets(unsigned long)
  [77] __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::deallocate(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [72] std::equal_to<unsigned long long>::operator()(unsigned long long const&, unsigned long long const&) const [10] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_nodes(std::__detail::_Hash_node<unsigned long long, false>*)
  [78] __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocate(unsigned long, void const*) [128] std::allocator<std::__detail::_Hash_node<unsigned long long, false> >::allocator() [114] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
 [125] __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::new_allocator() [100] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [132] std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_Hashtable_alloc()
 [126] __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::~new_allocator() [23] std::allocator<unsigned long long>::allocator<std::__detail::_Hash_node<unsigned long long, false> >(std::allocator<std::__detail::_Hash_node<unsigned long long, false> > const&) [92] std::__detail::_Node_iterator_base<unsigned long long, false>::_Node_iterator_base(std::__detail::_Hash_node<unsigned long long, false>*)
 [106] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [28] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [133] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [107] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [109] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [33] std::__detail::_Hash_node_value_base<unsigned long long>::_M_v()
  [98] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [104] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [57] std::__detail::_Hash_node_value_base<unsigned long long>::_M_valptr()
  [99] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [105] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets() [93] std::__detail::_Hash_node_value_base<unsigned long long>::_Hash_node_value_base()
  [79] void __gnu_cxx::new_allocator<unsigned long long>::destroy<unsigned long long>(unsigned long long*) [17] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [75] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&)
  [36] void __gnu_cxx::new_allocator<unsigned long long>::construct<unsigned long long, unsigned long long const&>(unsigned long long*, unsigned long long const&) [35] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) [51] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&)
  [62] __gnu_cxx::new_allocator<unsigned long long>::new_allocator() [8] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [55] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>&)
  [63] __gnu_cxx::new_allocator<unsigned long long>::~new_allocator() [12] std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool> std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > >(unsigned long long const&, std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > > const&, std::integral_constant<bool, true>) [134] std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<unsigned long long, false> >, true>::_Hashtable_ebo_helper()
  [56] __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() [29] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [73] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long long>, true> const&)
  [20] __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() [129] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable() [49] std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long long>, true> const&)
 [127] HashSet::size() const   [9] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [46] std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
  [80] __gnu_cxx::new_allocator<std::__detail::_Hash_node<unsigned long long, false> >::max_size() const [136] std::random_device::random_device(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [118] std::__detail::_Mod<unsigned long, 0ul, 1ul, 0ul, true, false>::__calc(unsigned long)
 [108] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [137] std::random_device::~random_device() [120] std::__detail::_Mod<unsigned long, 312ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  [58] __gnu_cxx::__aligned_buffer<unsigned long long>::_M_ptr() const [138] std::random_device::operator()() [119] unsigned long std::__detail::__mod<unsigned long, 0ul, 1ul, 0ul>(unsigned long)
  [21] __gnu_cxx::__aligned_buffer<unsigned long long>::_M_addr() const [83] std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::insert(unsigned long long const&) [121] unsigned long std::__detail::__mod<unsigned long, 312ul, 1ul, 0ul>(unsigned long)
  [31] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, unsigned long long const&, unsigned long) const [130] std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::unordered_set() [64] std::__detail::_Hash_node<unsigned long long, false>* std::__addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&)
  [25] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_begin(unsigned long) const [131] std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::~unordered_set() [101] std::__detail::_Hash_node_base** std::__addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [67] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false>*) const [84] std::pointer_traits<std::__detail::_Hash_node<unsigned long long, false>*>::pointer_to(std::__detail::_Hash_node<unsigned long long, false>&) [122] std::iterator_traits<int*>::iterator_category std::__iterator_category<int*>(int* const&)
  [59] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(unsigned long long const&, unsigned long) const [110] std::pointer_traits<std::__detail::_Hash_node_base**>::pointer_to(std::__detail::_Hash_node_base*&) [7] std::remove_reference<unsigned char&>::type&& std::move<unsigned char&>(unsigned char&)
  [32] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, unsigned long long const&, unsigned long) const [85] std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::deallocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) [97] std::remove_reference<int&>::type&& std::move<int&>(int&)
 [102] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_uses_single_bucket(std::__detail::_Hash_node_base**) const [86] std::allocator_traits<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::allocate(std::allocator<std::__detail::_Hash_node<unsigned long long, false> >&, unsigned long) [6] _ZSt4swapIhENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
  [16] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::count(unsigned long long const&) const [111] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::deallocate(std::allocator<std::__detail::_Hash_node_base*>&, std::__detail::_Hash_node_base**, unsigned long) [115] _ZSt4swapIiENSt9enable_ifIXsr6__and_ISt6__not_ISt15__is_tuple_likeIT_EESt21is_move_constructibleIS3_ESt18is_move_assignableIS3_EEE5valueEvE4typeERS3_SC_
 [103] std::_Hashtable<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [112] std::allocator_traits<std::allocator<std::__detail::_Hash_node_base*> >::allocate(std::allocator<std::__detail::_Hash_node_base*>&, unsigned long) [65] std::__detail::_Node_iterator<unsigned long long, true, false>&& std::forward<std::__detail::_Node_iterator<unsigned long long, true, false> >(std::remove_reference<std::__detail::_Node_iterator<unsigned long long, true, false> >::type&)
  [26] std::unordered_set<unsigned long long, std::hash<unsigned long long>, std::equal_to<unsigned long long>, std::allocator<unsigned long long> >::count(unsigned long long const&) const [87] void std::allocator_traits<std::allocator<unsigned long long> >::destroy<unsigned long long>(std::allocator<unsigned long long>&, unsigned long long*) [19] unsigned long long const& std::forward<unsigned long long const&>(std::remove_reference<unsigned long long const&>::type&)
  [47] std::hash<unsigned long long>::operator()(unsigned long long) const [38] void std::allocator_traits<std::allocator<unsigned long long> >::construct<unsigned long long, unsigned long long const&>(std::allocator<unsigned long long>&, unsigned long long*, unsigned long long const&) [69] unsigned long long& std::forward<unsigned long long&>(std::remove_reference<unsigned long long&>::type&)
  [37] std::__detail::_Hash_node<unsigned long long, false>* std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::operator()<unsigned long long const&>(unsigned long long const&) const [139] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::_M_gen_rand() [66] bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  [52] std::__detail::_Hash_node<unsigned long long, false>::_M_next() const [140] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::seed(unsigned long) [123] void std::reverse<int*>(int*, int*)
  [50] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [141] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::mersenne_twister_engine(unsigned long) [124] void std::__reverse<int*>(int*, int*, std::random_access_iterator_tag)
  [61] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(unsigned long long const&) const [135] std::mersenne_twister_engine<unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul>::operator()() [94] std::__detail::_Hash_node<unsigned long long, false>* std::addressof<std::__detail::_Hash_node<unsigned long long, false> >(std::__detail::_Hash_node<unsigned long long, false>&)
  [81] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<unsigned long long, false>*, unsigned long) const [88] std::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>::pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool, true>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&) [116] std::__detail::_Hash_node_base** std::addressof<std::__detail::_Hash_node_base*>(std::__detail::_Hash_node_base*&)
  [14] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<unsigned long long, false> const*, unsigned long) const [27] std::__detail::_AllocNode<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >::_AllocNode(std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<unsigned long long, false> > >&) [117] void std::iter_swap<int*, int*>(int*, int*)
  [60] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(unsigned long long const&, unsigned long, unsigned long) const [89] std::__detail::_Hash_node<unsigned long long, false>::_Hash_node() [95] std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<unsigned long long, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<unsigned long long, true, false>, bool>(std::__detail::_Node_iterator<unsigned long long, true, false>&&, bool&&)
  [48] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [90] std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [13] frame_dummy
  [44] std::__detail::_Hash_code_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [11] std::__detail::_Insert_base<unsigned long long, unsigned long long, std::allocator<unsigned long long>, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(unsigned long long const&) [1] main
  [70] std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [34] std::__detail::_Equal_helper<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, unsigned long, false>::_S_equals(std::equal_to<unsigned long long> const&, std::__detail::_Identity const&, unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*)
  [71] std::__detail::_Hashtable_base<unsigned long long, unsigned long long, std::__detail::_Identity, std::equal_to<unsigned long long>, std::hash<unsigned long long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(unsigned long long const&, unsigned long, std::__detail::_Hash_node<unsigned long long, false>*) const [91] std::__detail::_Node_iterator<unsigned long long, true, false>::_Node_iterator(std::__detail::_Hash_node<unsigned long long, false>*)
